server.port=${SERVICE_HTTP_PORT:8080}
#Master DB
spring.airbnb-master-datasource.url=${AIRBNB_MASTER_DB_HOST_URL:jdbc:mysql://localhost:3306/mydb}
spring.airbnb-master-datasource.username=${AIRBNB_MASTER_DB_USERNAME:root}
spring.airbnb-master-datasource.password=${AIRBNB_MASTER_DB_PASSWORD:root}
spring.airbnb-master-datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.airbnb-master-datasource.driver-class-name=com.mysql.jdbc.Driver
spring.airbnb-master-datasource.tomcat.max-active=${AIRBNB_MASTER_DB_MAX_ACTIVE_CONN:50}
spring.airbnb-master-datasource.tomcat.max-idle=${AIRBNB_MASTER_DB_MAX_IDLE_CONN:30}
spring.airbnb-master-datasource.tomcat.time-between-eviction-runs-millis=5000
spring.airbnb-master-datasource.tomcat.min-evictable-idle-time-millis=20000
spring.airbnb-master-datasource.tomcat.remove-abandoned=false
spring.airbnb-master-datasource.tomcat.validation-query=SELECT 1

#Slave DB
spring.airbnb-slave-datasource.url=${AIRBNB_SLAVE_DB_HOST_URL:jdbc:mysql://localhost:3306/mydb}
spring.airbnb-slave-datasource.username=${AIRBNB_SLAVE_DB_USERNAME:root}
spring.airbnb-slave-datasource.password=${AIRBNB_SLAVE_DB_PASSWORD:root}
spring.airbnb-slave-datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.airbnb-slave-datasource.driver-class-name=com.mysql.jdbc.Driver
spring.airbnb-slave-datasource.tomcat.max-active=${AIRBNB_SLAVE_DB_MAX_ACTIVE_CONN:50}
spring.airbnb-slave-datasource.tomcat.max-idle=${AIRBNB_SLAVE_DB_MAX_IDLE_CONN:30}
spring.airbnb-slave-datasource.tomcat.time-between-eviction-runs-millis=5000
spring.airbnb-slave-datasource.tomcat.min-evictable-idle-time-millis=20000
spring.airbnb-slave-datasource.tomcat.remove-abandoned=false
spring.airbnb-slave-datasource.tomcat.validation-query=SELECT 1

#JPA configuration
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto={JPA_DDL_AUTO:validate}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.open-in-view=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=false

#Logging
logging.level.root=${AIRBNB_LOG_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=${AIRBNB_LOG_LEVEL_SPRING_WEB:INFO}
logging.level.com.airbnb.crud=${AIRBNB_LOG_LEVEL_CRUD:INFO}
logging.level.org.hibernate=${AIRBNB_LOG_LEVEL_HIBERNATE:INFO}
logging.level.org.hibernate.SQL=${AIRBNB_LOG_LEVEL_HIBERNATE_SQL:INFO}
logging.level.org.hibernate.type=${AIRBNB_LOG_LEVEL_HIBERNATE_TYPE:INFO}

#Redis Details
redis.host=${REDIS_HOST:localhost}
redis.database=${REDIS_DB:1}

#New Relic
management.metrics.export.newrelic.apiKey=${NEW_RELIC_API_KEY:random-api-key}
management.metrics.export.newrelic.accountId =${NEW_RELIC_ACCOUNT_ID:account-id}

#Prometheus
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=/health-check
management.endpoints.web.path-mapping.prometheus=/metrics

#Swagger
swagger.enabled=${SWAGGER_ENABLED:true}
spring.flyway.enabled=true
